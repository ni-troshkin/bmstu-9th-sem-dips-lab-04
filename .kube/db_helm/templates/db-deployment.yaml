apiVersion: apps/v1
kind: Deployment
metadata:
  #annotations:
  #  kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert --controller deployment
  #    --out k8s/
  #  kompose.version: 1.21.0 (992df58d8)
  # creationTimestamp: null
  labels:
    # io.kompose.service: library-db
    app.kubernetes.io/name: libraryapp
    app.kubernetes.io/component: {{ .Release.Name }}-db
  name: {{ .Release.Name }}-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: libraryapp
      app.kubernetes.io/component: {{ .Release.Name }}-db
      # io.kompose.service: library-db
  #strategy:
  #  type: Recreate
  template:
    metadata:
      #annotations:
      #  kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert --controller deployment
      #    --out k8s/
      #  kompose.version: 1.21.0 (992df58d8)
      #creationTimestamp: null
      labels:
        app.kubernetes.io/name: libraryapp
        app.kubernetes.io/component: {{ .Release.Name }}-db
        #io.kompose.service: library-db
    spec:
      containers:
      - env:
        - name: PGDATA
          value: /home/data
        - name: POSTGRES_DB
          value: {{ .Release.Name }}service
        - name: POSTGRES_INITDB_ARGS
          value: -A md5
        - name: POSTGRES_PASSWORD
          value: {{ .Values.password }}
        - name: POSTGRES_USER
          value: dev
        image: "nitroshkin/db-{{ .Release.Name }}:{{ .Values.version }}"
        imagePullPolicy: IfNotPresent
        name: {{ .Release.Name }}-db
        ports:
        - containerPort: {{ .Values.dbPort }}
          name: pg
#        - containerPort: 5433
        resources: {}
        volumeMounts:
        - mountPath: /data/lib/postgresql/data
          name: db-data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: db-data-claim
#status: {}
