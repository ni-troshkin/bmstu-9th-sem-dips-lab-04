apiVersion: apps/v1
kind: Deployment
metadata:
  #annotations:
  #  kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert --controller deployment
  #    --out k8s/
  #  kompose.version: 1.21.0 (992df58d8)
  #creationTimestamp: null
  labels:
    app.kubernetes.io/name: libraryapp
    app.kubernetes.io/component: {{ .Release.Name }}
#    io.kompose.service: gateway-server
  name: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: libraryapp
      app.kubernetes.io/component: {{ .Release.Name }}
    #  io.kompose.service: {{ .Release.Name }}
  #strategy: {}
  template:
    metadata:
      #annotations:
      #  kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert --controller deployment
      #    --out k8s/
      #  kompose.version: 1.21.0 (992df58d8)
      #creationTimestamp: null
      labels:
        app.kubernetes.io/name: libraryapp
        app.kubernetes.io/component: {{ .Release.Name }}
       # io.kompose.service: gateway-server
    spec:
      containers:
      - image: 'nitroshkin/{{ .Release.Name }}:{{ .Values.version }}'
        imagePullPolicy: IfNotPresent
        name: {{ .Release.Name }}
        ports:
        - containerPort: {{ .Values.port }}
          name: http
#        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
#      volumes: null
#status: {}
